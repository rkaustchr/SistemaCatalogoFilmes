/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package janelas.filme;

import classes.Filme;
import classes.Nota;
import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

import   sistemacatalogofilmes.SistemaCatalogoFilmes;

/**
 *
 * @author Admin
 */
public class frmVerFilme extends javax.swing.JFrame {

    private int indice;
    private boolean avaliado;
    private Filme filme;
    private Nota nota;
    
    /**
     * Creates new form frmVerFilme
     */
    public frmVerFilme() {
        initComponents();
    }
    
    /**
    *    Carrega os usuários que já assistiram para a tabela
    */
    private void atualizarTabela() {
        String colunas[] = { "Nome", "Nota" };
        String dados[][];
        ArrayList<Nota> temp = new ArrayList<>();
        float media = 0;
        int i;
        
        for (i=0; i < SistemaCatalogoFilmes.bancoNotas.size(); i++ ) {
            if ( SistemaCatalogoFilmes.bancoNotas.get(i).getFilme().equals(filme) ) {
                temp.add( SistemaCatalogoFilmes.bancoNotas.get(i) );
            }             
        }
        
        dados = new String[temp.size()][colunas.length];
        for (i=0; i < temp.size(); i++ ) {
            dados[i][0] = temp.get(i).getUsuario().getNome();
            dados[i][1] = String.valueOf( temp.get(i).getNota() );
            media += temp.get(i).getNota();
        }
        
        if ( temp.size() > 0 ) {
            DecimalFormat df = new DecimalFormat("0.00");
            lblNota.setText( String.valueOf( df.format(media / (float) temp.size()))  + "✰");
        } else {
            lblNota.setText( "--" );
        }
            
        tblEspectadores.setModel(new javax.swing.table.DefaultTableModel(
            dados,
            colunas
        ));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblCodigo = new javax.swing.JLabel();
        lblNome = new javax.swing.JLabel();
        lblDataLancamento = new javax.swing.JLabel();
        lblDataDvd = new javax.swing.JLabel();
        lblUrl = new javax.swing.JLabel();
        lblCategorias = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblEspectadores = new javax.swing.JTable();
        btnAvaliacao = new javax.swing.JButton();
        lblNota = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sistema Catálogo de Filmes (v1.0) - Ver Filme");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Código");

        jLabel2.setText("Data de Lançamento");

        jLabel6.setText("Categorias");

        jLabel3.setText("Nome");

        jLabel4.setText("URL");

        jLabel5.setText("Data do DVD");

        lblCodigo.setText("__Código__");

        lblNome.setText("__Nome__");

        lblDataLancamento.setText("__Data de Lançamento__");

        lblDataDvd.setText("__Data do DVD__");

        lblUrl.setText("__URL__");

        lblCategorias.setText("__CA, te, go, ri, as__");

        jLabel7.setText("Já assistiram esse filme:");

        tblEspectadores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblEspectadores);

        btnAvaliacao.setText("Avaliar!");
        btnAvaliacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvaliacaoActionPerformed(evt);
            }
        });

        lblNota.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        lblNota.setText("Nota");

        jLabel8.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel8.setText("Exibição de filme");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(115, 115, 115)
                                .addComponent(jLabel1))
                            .addComponent(jLabel2)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDataLancamento)
                            .addComponent(lblDataDvd)
                            .addComponent(lblUrl)
                            .addComponent(lblCategorias)
                            .addComponent(lblNome)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblCodigo)
                                .addGap(84, 84, 84)
                                .addComponent(btnAvaliacao)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblNota))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 581, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblCodigo)
                    .addComponent(btnAvaliacao)
                    .addComponent(lblNota))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lblNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblDataLancamento))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(lblDataDvd))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lblUrl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(lblCategorias))
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(635, 395));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        
    }//GEN-LAST:event_formWindowActivated

    private void btnAvaliacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvaliacaoActionPerformed
        if ( SistemaCatalogoFilmes.usuarioLogado == null ) {
            JOptionPane.showMessageDialog(this, "Faça o login para avaliar este filme!");
            return;
        }
        
        String nota = (String)JOptionPane.showInputDialog(
                    new JFrame(),
                    "Informe a nota [ de 1 a 5 ]",
                    "Avaliação de filme",
                    JOptionPane.QUESTION_MESSAGE
                );
        
        if ( nota.isEmpty() ) {
            this.dispose();
            return;
        }
        
        if ( !nota.matches("[1-5]{"+nota.length()+"}") ) {
            JOptionPane.showMessageDialog(new JFrame(), "Preencha com uma nota válida!", "Mensagem", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        Nota n;
        if ( avaliado == false ) {
            n = new Nota(filme, SistemaCatalogoFilmes.usuarioLogado, Integer.parseInt(nota));
            SistemaCatalogoFilmes.bancoNotas.add( n );
        } else {
            int i;
            for ( i=0; i < SistemaCatalogoFilmes.bancoNotas.size(); i++ ) {
                n = SistemaCatalogoFilmes.bancoNotas.get(i);
                if ( n.getUsuario().equals(SistemaCatalogoFilmes.usuarioLogado) ) {
                    if ( n.getFilme().equals(filme) ) {
                        n.alterarNota(Integer.parseInt(nota)); 
                        this.nota = n;
                        break;
                    }
                }
            }
        }
        
        btnAvaliacao.setText("Alterar nota!");
        avaliado = true;
        
        atualizarTabela();
    }//GEN-LAST:event_btnAvaliacaoActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        String codigo;
        int cod;
        
        codigo = (String)JOptionPane.showInputDialog(
                    new JFrame(),
                    "Informe o código do filme que deseja ver",
                    "Exibição de filme",
                    JOptionPane.QUESTION_MESSAGE
                );
        
        if ( codigo == null || codigo.isEmpty() ) {
            this.dispose();
            return;
        }
        
        // Procurar o filme
        int total = SistemaCatalogoFilmes.filmes.size();
        indice = -1;
        int i;
        
        if ( codigo.isEmpty() || !codigo.matches("[0-9]{"+codigo.length()+"}") ) {
            JOptionPane.showMessageDialog(new JFrame(), "Preencha com um código válido!", "Mensagem", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        cod = Integer.parseInt(codigo);
        
        for( i=0; i < total; i++ ) {
            if ( SistemaCatalogoFilmes.filmes.get(i).getCodigo() == cod  ) {
                indice = i;
                break;
            }
        }
        
        if ( indice == -1 ) {
            JOptionPane.showMessageDialog(this, "Filme não encontrado!");
            this.dispose();
            return;
        }
        
        // Carrega dados do Filme para tela
        filme = SistemaCatalogoFilmes.filmes.get(indice);
        lblCodigo.setText( String.valueOf( filme.getCodigo() ));
        lblNome.setText(filme.getNome());
        lblDataLancamento.setText(filme.getDataLacamento());
        lblDataDvd.setText(filme.getDataDvd());
        lblUrl.setText(filme.getUrl());
        
        lblCategorias.setText("");
        for ( i=0; i < filme.getCategorias().size(); i++) {
            lblCategorias.setText(lblCategorias.getText() + filme.getCategorias().get(i).getNome()  + "   ");
        }
        
        // Verifica se o usuário logado já avaliou o filme exibido
        for ( i=0; i < SistemaCatalogoFilmes.bancoNotas.size(); i++ ) {
            Nota n = SistemaCatalogoFilmes.bancoNotas.get(i);
            if ( n.getUsuario().equals(SistemaCatalogoFilmes.usuarioLogado) ) {
                if ( n.getFilme().equals(filme) ) {
                    btnAvaliacao.setText("Alterar nota!");
                    avaliado = true;
                    this.nota = n;
                } else {
                    btnAvaliacao.setText("Avaliar!");
                    avaliado = false;
                    this.nota = null;
                }
            }
        }
        
        atualizarTabela();
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmVerFilme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmVerFilme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmVerFilme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmVerFilme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmVerFilme().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAvaliacao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblCategorias;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblDataDvd;
    private javax.swing.JLabel lblDataLancamento;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblNota;
    private javax.swing.JLabel lblUrl;
    private javax.swing.JTable tblEspectadores;
    // End of variables declaration//GEN-END:variables
}
